// <auto-generated />
using System;
using LGT.Intranet;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LGT.Intranet.Migrations.IntranetContextMigrations
{
    [DbContext(typeof(IntranetContext))]
    [Migration("20240319112839_Initial commit")]
    partial class Initialcommit
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.3");

            modelBuilder.Entity("LGT.Intranet.Models.Article", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<long>("Accessibility")
                        .HasColumnType("INTEGER");

                    b.Property<string>("BodyMarkdown")
                        .HasColumnType("TEXT");

                    b.Property<string>("InternalName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Articles");
                });

            modelBuilder.Entity("LGT.Intranet.Models.Column", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Index")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PageId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("PageId");

                    b.ToTable("Columns");
                });

            modelBuilder.Entity("LGT.Intranet.Models.Group", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ColumnId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Index")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsPublic")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Markdown")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ColumnId");

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("LGT.Intranet.Models.Group_Article", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ArticleId")
                        .HasColumnType("TEXT");

                    b.Property<int>("GroupId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Index")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ArticleId");

                    b.HasIndex("GroupId");

                    b.ToTable("Group_Article");
                });

            modelBuilder.Entity("LGT.Intranet.Models.Link", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Comment")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<int>("GroupId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Index")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("INTEGER")
                        .HasComment("Prie uzrakintu nuorodu bus rodoma spynele.");

                    b.Property<bool>("IsPublic")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsTargetBlank")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("NewUntil")
                        .HasColumnType("TEXT");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.ToTable("Links");
                });

            modelBuilder.Entity("LGT.Intranet.Models.Message", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<Guid?>("ArticleId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Header")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<int>("Index")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsPublic")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("ShowSince")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Since")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Until")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ArticleId");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("LGT.Intranet.Models.Page", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsImportant")
                        .HasColumnType("INTEGER")
                        .HasComment("Svarbus puslapiai bus matomi intraneto apacios viduryje");

                    b.Property<bool>("IsPublic")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Key")
                        .HasMaxLength(16)
                        .HasColumnType("TEXT");

                    b.Property<string>("Nam")
                        .HasMaxLength(32)
                        .HasColumnType("TEXT")
                        .HasComment("Trumpas pavadinimas naudojamas svarbiu puslapiu skiltyje");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Pages");
                });

            modelBuilder.Entity("LGT.Intranet.Models.Column", b =>
                {
                    b.HasOne("LGT.Intranet.Models.Page", "Page")
                        .WithMany("Columns")
                        .HasForeignKey("PageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("LGT.Intranet.Models.ColumnSizes", "Sizes", b1 =>
                        {
                            b1.Property<int>("ColumnId")
                                .HasColumnType("INTEGER");

                            b1.Property<int?>("Default")
                                .HasColumnType("INTEGER");

                            b1.Property<int?>("LG")
                                .HasColumnType("INTEGER");

                            b1.Property<int?>("MD")
                                .HasColumnType("INTEGER");

                            b1.Property<int?>("SM")
                                .HasColumnType("INTEGER");

                            b1.Property<int?>("XS")
                                .HasColumnType("INTEGER");

                            b1.HasKey("ColumnId");

                            b1.ToTable("Columns");

                            b1.WithOwner()
                                .HasForeignKey("ColumnId");
                        });

                    b.Navigation("Page");

                    b.Navigation("Sizes")
                        .IsRequired();
                });

            modelBuilder.Entity("LGT.Intranet.Models.Group", b =>
                {
                    b.HasOne("LGT.Intranet.Models.Column", "Column")
                        .WithMany("Groups")
                        .HasForeignKey("ColumnId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Column");
                });

            modelBuilder.Entity("LGT.Intranet.Models.Group_Article", b =>
                {
                    b.HasOne("LGT.Intranet.Models.Article", "Article")
                        .WithMany("GroupAssignments")
                        .HasForeignKey("ArticleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LGT.Intranet.Models.Group", "Group")
                        .WithMany("ArticleAssignments")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Article");

                    b.Navigation("Group");
                });

            modelBuilder.Entity("LGT.Intranet.Models.Link", b =>
                {
                    b.HasOne("LGT.Intranet.Models.Group", "Group")
                        .WithMany("Links")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Group");
                });

            modelBuilder.Entity("LGT.Intranet.Models.Message", b =>
                {
                    b.HasOne("LGT.Intranet.Models.Article", "Article")
                        .WithMany()
                        .HasForeignKey("ArticleId");

                    b.Navigation("Article");
                });

            modelBuilder.Entity("LGT.Intranet.Models.Article", b =>
                {
                    b.Navigation("GroupAssignments");
                });

            modelBuilder.Entity("LGT.Intranet.Models.Column", b =>
                {
                    b.Navigation("Groups");
                });

            modelBuilder.Entity("LGT.Intranet.Models.Group", b =>
                {
                    b.Navigation("ArticleAssignments");

                    b.Navigation("Links");
                });

            modelBuilder.Entity("LGT.Intranet.Models.Page", b =>
                {
                    b.Navigation("Columns");
                });
#pragma warning restore 612, 618
        }
    }
}
