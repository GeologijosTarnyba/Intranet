@code {
  [Parameter] public string? id { get; set; }
  [Parameter] public EventCallback<string?> idChanged { get; set; }

  [Parameter] public LGT.Incidentai.Models.InformacinisIsteklius? value { get; set; }
  [Parameter] public EventCallback<LGT.Incidentai.Models.InformacinisIsteklius?> valueChanged { get; set; }

  override protected async Task OnParametersSetAsync()
  {
    await base.OnParametersSetAsync();
    if(this.chosenDarbovieteID == null)
    {
      this.chosenDarbovieteID = this.ParamDarbovieteID;
    }
  }
  [Parameter] public string? ParamDarbovieteID { get; set; }
}
@inject LGT.Intranet.Internal.InternalContext db
@if(ParamDarbovieteID == null){
  <ChooseDarboviete 
    id=@chosenDarbovieteID
    idChanged=@(async (val) => {
      chosenDarbovieteID = val;
      await Unchoose();
    })
 
  />
  @* ParamExtraFilter =@(darboviete => darboviete.InformaciniaiIstekliai.Any()) // TODO *@
}
@if (this.id == null && this.value == null)
{
  @if (chosenDarbovieteID != null)
  {
    <ExpList ParamSource=@(
      db.Set<InformacinisIsteklius>()
        .Where(item => item.DarbovieteID == chosenDarbovieteID)
    )>
      <Wrapper Context="rows">
        <ul>@rows</ul>
      </Wrapper>
      <IfSome Context="td">
        <li>
          <ActionButton onclick=@(async () => await Choose(td))>
            <Name ParamName=@td.Name />
          </ActionButton>
        </li>
      </IfSome>
      <IfNone>
        <div class="text-danger">darbovietė neturi informacinių sistemų</div>
      </IfNone>
    </ExpList>
  }
}
else
{
  <text>&raquo;</text>
  <ActionButton onclick=@(async () => await Unchoose())>
    <Name ParamName=@(this.chosenName) />
  </ActionButton>
}
@code {
  private string? chosenName;
  private string? chosenDarbovieteID;
  private async Task Choose(LGT.Incidentai.Models.InformacinisIsteklius informacinisIsteklius)
  {
    await this.idChanged.InvokeAsync(id);
    await this.valueChanged.InvokeAsync(informacinisIsteklius);
    this.chosenName = informacinisIsteklius.Name;
  }
  private async Task Unchoose()
  {
    if(id != null)
    {
      await this.idChanged.InvokeAsync(null);
    }
    await this.valueChanged.InvokeAsync(null);
    this.chosenName = null;
  }
}
