@code {
  [Parameter] public DateTime? value { get; set; }
  [Parameter] public EventCallback<DateTime?> valueChanged { get; set; }
  [Parameter] public string? ParamFormat{ get; set; }
  private string format => this.ParamFormat ?? "yyyy-MM-dd hh:mm";
  [Parameter] public string ParamClass { get; set; } = string.Empty;
  [Parameter] public string ParamStyle { get; set; } = string.Empty;
}
<input 
  value=@(value?.ToString(this.format) ?? string.Empty)
  placeholder="@format"
  @onchange="@(async (ev) => {
    try {
      var val =(string?)ev.Value;
      if(string.IsNullOrEmpty(val)){
        await valueChanged.InvokeAsync(null);
      } else {
        var dt = DateTime.ParseExact(ev?.Value?.ToString() ?? "", this.format, null);
        await valueChanged.InvokeAsync(dt);
      }
    }
    catch {
      //this.value = ParamDefaultFunc.Invoke();
      //this.StateHasChanged();
    }
  })"
  class=@ParamClass
  style=@ParamStyle
/>
