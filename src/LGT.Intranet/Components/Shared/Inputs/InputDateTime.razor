@code {
  [Parameter] public bool ParamIsOptional { get; set; }
  [Parameter] public bool ParamIsPrefered { get; set; } = false;
  [Parameter] public DateTime? value { get; set; }
  [Parameter] public EventCallback<DateTime?> valueChanged { get; set; }
  [Parameter] public Func<DateTime?> ParamDefaultFunc { get; set; }
  [Parameter] public string? ParamName { get; set; }
  [Parameter] public RenderFragment? NameFragment { get; set; }
  public InputDateTime()
  {
    this.ParamDefaultFunc = (() =>
    {
      var now = System.DateTime.Now;
      return new System.DateTime(now.Year, now.Month, now.Day, now.Hour, now.Minute, now.Second);
    });
  }
  [Parameter] public bool ParamShowSeconds { get; set; } = false;
  [Parameter] public bool ParamShowHours { get; set; } = true;
  private string Format
  {
    get
    {
      if (ParamShowSeconds)
      {
        return "yyyy-MM-dd HH:mm:ss";
      }
      if (ParamShowHours)
      {
        return "yyyy-MM-dd HH:mm";
      }
      return "yyyy-MM-dd";
    }
  }
}
<InputAny T="@(System.DateTime?)"
          ParamIsOptional=@ParamIsOptional ParamIsPrefered=@ParamIsPrefered
          ParamDefaultFunc=@ParamDefaultFunc
          value=@value valueChanged=@valueChanged
          ParamName=@ParamName
          NameFragment=@NameFragment>
  <ValueFragment>
    <BindDateTime 
      value=@value valueChanged=@valueChanged 
      ParamFormat=@Format 
      ParamClass="w-100"
      ParamStyle="min-width:170px;"
      
      />
    
  </ValueFragment>

</InputAny>
