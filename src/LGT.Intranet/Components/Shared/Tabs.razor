@code {
  [Parameter] public RenderFragment? IfEdit { get; set; }
  [Parameter] public RenderFragment? IfDelete { get; set; }
  [Parameter] public RenderFragment? IfCreate { get; set; }
}
@code {
  private enum TabStates { Edit, Create, Delete }
  private TabStates ActiveTab { get; set; } = 0;
}

<nav>
  <div class="nav nav-tabs" id="nav-tab" role="tablist">
    @if (this.IfCreate != null)
    {
      <button class="nav-link@(this.ActiveTab == TabStates.Create ? " active": "")" @onclick=@(() => this.ActiveTab = TabStates.Create)>Sukurti</button>
    }
    @if (this.IfEdit != null)
    {
      <button class="nav-link@(this.ActiveTab == TabStates.Edit ? " active": "")" @onclick=@(() => this.ActiveTab = TabStates.Edit)>Redaguoti</button>
    }
    @if (this.IfDelete != null)
    {
      <button class="nav-link@(this.ActiveTab == TabStates.Delete ? " active": "")" @onclick=@(() => this.ActiveTab = TabStates.Delete)>Ištrinti</button>
    }
  </div>
</nav>

<div class="tab-content border" style="min-height: 150px">
  @if (this.ActiveTab == TabStates.Create && this.IfCreate != null)
  {
    @this.IfCreate
  }
  @if (this.ActiveTab == TabStates.Edit && this.IfEdit != null)
  {
    @this.IfEdit
  }
  @if (this.ActiveTab == TabStates.Delete && this.IfDelete != null)
  {
    @this.IfDelete
  }
</div>