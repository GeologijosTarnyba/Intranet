@code {
  [Parameter] public int ParamTelkID { get; set; }
}
@inject Geolis.GeolisContext db
<ExpList ParamText="Rodyti" ParamIsExpanded=false ParamIsExpandable=true
  ParamSource=@(
    db.Telkiniai
      .Where(item => item.ID == this.ParamTelkID)
      .Select(telk => new {
        Sluoksniai = telk.Sluoksniai!
        .Select(sl => new {
          sl.ID,
          sl.TelkinysIndex,
          KiekiaiPries1999 = sl.GavybosAtaskaitos_Pries1999!.Select(item => new {
            item.Kiekis
          }),
          IR = (string?)sl.AGS_IST_TRUMP,
          Ketvs = sl.NER_GAV_KETVs!
          .OrderBy(item => item.GAVK_METAI).ThenBy(item=> item.GAVK_KETV)
          .Select(ketv => new {
            Deadline = new DateTime(ketv.GAVK_METAI, 3*ketv.GAVK_KETV, 1).AddMonths(1).AddSeconds(-1),
          }),
          Metines = sl.NER_ISK_GAVs!.Select(met => new {
            Deadline = new DateTime(met.Metai, 12, 31),
          }),
          Istekliai = sl.Istekliai!
            .OrderBy(item => item.IST_GALIOJA_NUO)
            .Select(ist => new {
              Comment = ist.Comment,
              ist.ID,
              IST_ISTK_KATEGORIJA = ist.IST_ISTK_KATEGORIJA,
              IST_GALIOJA_NUO = (DateTime?)ist.IST_GALIOJA_NUO,
              IST_GALIOJA_IKI = (DateTime?)ist.IST_GALIOJA_IKI,
              Kiekis = (decimal?)ist.IST_KIEKIS
            })
          }
        )
        .Where(sl => sl.Istekliai.Any())
      })
  )
>
  <IfSome Context="telk">
    <table class="bord">
      <tr>
        <th>Sl. Nr.</th>
        <th>Išt</th>
        <th>Tipas</th>
        <th>Nuo</th>
        <th>Iki</th>
        <th>Kiekis</th>
        <th>Gavybos ataskaitos</th>
        <th></th>
      </tr>
      @foreach (var sl in telk.Sluoksniai)
      {
        var first = sl.Istekliai.First();
        @foreach (var ist in sl.Istekliai)
        {
          var ketvs = sl.Ketvs.Where(ketv => ketv.Deadline > ist.IST_GALIOJA_NUO && (ist.IST_GALIOJA_IKI == null || ketv.Deadline < ist.IST_GALIOJA_IKI.Value));
          var mets = sl.Metines.Where(met => met.Deadline > ist.IST_GALIOJA_NUO && (ist.IST_GALIOJA_IKI == null || met.Deadline < ist.IST_GALIOJA_IKI.Value));
          <tr>
            @if(ist == first)
            {
              var count = sl.Istekliai.Count(); 
              <td rowspan="@count">
                @sl.TelkinysIndex
              </td>
            }
            <td>@sl.IR</td>
            <td>@ist.IST_ISTK_KATEGORIJA</td>
            <td>@ist.IST_GALIOJA_NUO.LT(false)</td>
            <td>@ist.IST_GALIOJA_IKI.LT(false)</td>
            <td>@ist.Kiekis</td>
            @if (sl.KiekiaiPries1999.Any() || ketvs.Any() || mets.Any())
            {
              <td>
                <TelkiniuGavybosAtaskaitos
                  ParamSluoksnioId="@sl.ID"
                  ParamSince="@ist.IST_GALIOJA_NUO"
                  ParamUntil="@ist.IST_GALIOJA_IKI"
                  likutis="@ist.Kiekis"
                />
              </td>
            } else
            {
              <td colspan="1"></td>
            }
            <td>@ist.Comment</td>
          </tr>
        }
      }
    </table>
  </IfSome>
</ExpList>
