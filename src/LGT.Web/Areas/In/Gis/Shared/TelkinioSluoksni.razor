@inject Data.GeolisContext db
@code {
  [Parameter] public int ParamTelkID { get; set; }
}

<ExpList ParamText="Rodyti" ParamIsExpanded=false ParamIsExpandable=true
  ParamSource=@(
    db.Telkiniai
      .Where(item => item.ID == this.ParamTelkID)
      .Select(telk => new {
        Sluoksniai = telk.Sluoksniai
        .Select(sl => new {
          sl.ID,
          sl.TelkinysIndex,
          IR = (string?)sl.AGS_IST_TRUMP,
          Ketvs = sl.NER_GAV_KETVs
          .OrderBy(item => item.GAVK_METAI).ThenBy(item=> item.GAVK_KETV)
          .Select(ketv => new {
            Metai = ketv.GAVK_METAI, Ketv = ketv.GAVK_KETV,
            IR = (string?)ketv.IstekliuRusisID,
            Deadline = new DateTime(ketv.GAVK_METAI, 3*ketv.GAVK_KETV, 1).AddMonths(1).AddSeconds(-1),

            Gavyba = ketv.GAVK_KIEKIS,
            Nuostolis = ketv.GAVK_NUOSTOLIS,
            UZ_KONT = ketv.GAVK_UZ_KONT,
            IST_PASIKEITIMAS = ketv.GAVK_IST_PASIKEITIMAS,
            PR = ketv.GAVK_LIKUTIS_PR,
            PB = ketv.GAVK_LIKUTIS_PB
          }),
          Metines = sl.NER_ISK_GAVs.Select(met => new {
            Metai = met.Metai,
            IR = (string?)met.IstekliuRusisID,
            Deadline = new DateTime(met.Metai, 12, 31),

            Gavyba = met.GAV_KIEKIS,
            Nuostolis = met.GAV_NUOSTOLIS,
            UZ_KONT = met.GAV_UZ_KONT,
            IST_PASIKEITIMAS = met.GAV_NUOST_2015
          }),
          Istekliai = sl.Istekliai
            .OrderBy(item => item.IST_GALIOJA_NUO)
            .Select(ist => new {
              ist.Comment,
              ist.ID,
              ist.IST_ISTK_KATEGORIJA,
              ist.IST_GALIOJA_NUO,
              ist.IST_GALIOJA_IKI,
              Kiekis = ist.IST_KIEKIS,
            })
          }
        )
        .Where(sl => sl.Istekliai.Any())
      })
  )
>
  <IfSome Context="telk">
    <table class="bord">
      <tr>
        <th>Sl. Nr.</th>
        <th>Išt</th>
        <th>Tipas</th>
        <th>Nuo</th>
        <th>Iki</th>
        <th>Kiekis</th>
        <td>ketv/met</td>
      </tr>
      @foreach (var sl in telk.Sluoksniai)
      {
        var first = sl.Istekliai.First();
        @foreach (var ist in sl.Istekliai)
        {
          var ketvs = sl.Ketvs.Where(ketv => ketv.Deadline > ist.IST_GALIOJA_NUO && (ist.IST_GALIOJA_IKI == null || ketv.Deadline < ist.IST_GALIOJA_IKI.Value)).OrderBy(item => item.Metai).ThenBy(item => item.Ketv);
          var mets = sl.Metines.Where(met => met.Deadline > ist.IST_GALIOJA_NUO && (ist.IST_GALIOJA_IKI == null || met.Deadline < ist.IST_GALIOJA_IKI.Value)).OrderBy(item => item.Metai);
          var naujiKetv = ketvs
          //.Where(ketv => !mets.Any(item => item.Metai == ketv.Metai))
          ; // Ketvirčiai nesutraukti į metines statistikas
          <tr>
            @if(ist == first)
            {
              var count = sl.Istekliai.Count(); 
              <td rowspan="@count">
                @sl.TelkinysIndex
              </td>
            }
            <td>@sl.IR</td>
            <td>@ist.IST_ISTK_KATEGORIJA</td>
            <td>@ist.IST_GALIOJA_NUO.LT(false)</td>
            <td>@ist.IST_GALIOJA_IKI.LT(false)</td>
            <td>@ist.Kiekis</td>
            @if(!mets.Any() && !ketvs.Any())
            {
              <td colspan="4"></td>
            } else
            {
              <td>
                <table class="bord w-100">
                  <tr>
                    <td>At</td>
                    <td>start</td>
                    <td>Gavyba</td>
                    <td>Nuostlis</td>
                    <td>Pasikeitimas</td>
                    <td>UzKont</td>
                    <td>end</td>
                  </tr>
                  @foreach(var met in mets){
                    <tr>
                      <td>@(met.Metai)</td>
                      <td></td>
                      <td>@(met.Gavyba)</td>
                      <td>@(met.Nuostolis)</td>
                      <td>@(met.IST_PASIKEITIMAS)</td>
                      <td>@(met.UZ_KONT)</td>
                      <td></td>
                    </tr>
                  }
                  @foreach (var ketv in naujiKetv)
                  {
                    <tr>
                      <td>@(ketv.Metai)Q@(ketv.Ketv)</td>
                      <td>@(ketv.PR)</td>
                      <td>@(ketv.Gavyba)</td>
                      <td>@(ketv.Nuostolis)</td>
                      <td>@(ketv.IST_PASIKEITIMAS)</td>
                      <td>@(ketv.UZ_KONT)</td>
                      <td>@(ketv.PB)</td>
                    </tr>
                  }
                </table>
              </td>
            
            }
            <td>@ist.Comment</td>
          </tr>
        }
      }
    </table>
  </IfSome>
</ExpList>

@code {
  
}