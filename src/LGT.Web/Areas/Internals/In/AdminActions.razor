@page "/in/internals"
@attribute [CustomAuthorize(AdminRightsEnum.All)]
@using LGT.Web.Areas.Internals.Shared
@code {
  private string? action { get; set; } = "Create";
  private string? type { get; set; }
}
<table class="bord">
  <tr>
    <td></td>
    <td style="width: 1px;">@ActionButton("Create", "Create")</td>
    <td style="width: 1px;">@ActionButton("View", "View")</td>
    <td style="width: 1px;">@ActionButton("Edit", "Edit")</td>
    <td></td>
  </tr>
  @foreach(var t in types)
  {
    <tr style="height:1px">
      <td>@TypeButton(t.Name, t.Value)</td>
      @if(t == types.First())
      {
        <td style="border: solid black 1px;" colspan="4" rowspan="@(this.types.Count + 1)">
          <ActionPanels ParamAction=@action ParamType=@type />
        </td>
      }
    </tr>
  }
  <tr>
    <td></td>
  </tr>
</table>


@code {
  private List<(string Name, string Value)> types = new()
  {
    ("Skundas", "skundas"),
    ("Incidentas", "incidentas"),
    ("Kreipinys", "kreipinys"),
    ("Sprendimas", "sprendimas"),
    ("Darbovietė", "darboviete"),
    ("Darbuotojas", "darbuotojas"),
    ("Asmuo", "asmuo"),
    ("Informacinis išteklius", "informacinisIsteklius")
  };
  private RenderFragment ActionButton(string name, string state)
  {
    return
    @<ActionButton 
      onclick=@(() => this.action = state)
      ParamIsActive=@(this.action != state)
     >
       @name
     </ActionButton>;
  }
  private RenderFragment TypeButton(string name, string state)
  {
    return
    @<ActionButton 
      onclick=@(() => this.type = state)
      ParamIsActive=@(this.type != state)
       >
      @name
    </ActionButton>;
  }
}