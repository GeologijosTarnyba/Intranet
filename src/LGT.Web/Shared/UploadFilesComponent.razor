@using System 
@using System.IO
@using Microsoft.AspNetCore.Hosting
@using Microsoft.Extensions.Logging
@code {
  [Parameter] public string ParamDirectoryToSaveTo { get; set; }
  [Parameter] public EventCallback callback { get; set; }
}
<InputFile OnChange="@LoadFiles" multiple >asd</InputFile>
@if (isLoading)
{
    <p>Keliama...</p>
}

@code {
  private List<IBrowserFile> loadedFiles = new();
  private long maxFileSize = 1024 * 1024 * 300;
  private int maxAllowedFiles = 30;
  private bool isLoading;

  private async Task LoadFiles(InputFileChangeEventArgs e)
  {
    isLoading = true;
    foreach (var file in e.GetMultipleFiles(maxAllowedFiles))
    {
      try
      {
        var trustedFileNameForFileStorage = Path.GetRandomFileName();
        var path = $"{this.ParamDirectoryToSaveTo}/{file.Name}";
        await using FileStream fs = new(path, FileMode.Create);
        await file.OpenReadStream(maxFileSize).CopyToAsync(fs);
        await callback.InvokeAsync();
      }
      catch (Exception ex)
      {
        Console.WriteLine("File: {Filename} Error: {Error}", file.Name, ex.Message);
      }
    }
    isLoading = false;
  }
}